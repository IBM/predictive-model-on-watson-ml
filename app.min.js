/**
 * Copyright 2019 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the 'License'); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

var XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;
var btoa           = require('btoa');

var wml_instance = 'a7ea00ba-abd1-4516-838e-fe298495a427'
var wml_deployment = '13cbddfd-69ad-4d1d-8234-a26f29d3f715'

var wml_service_credentials_url = 'https://us-south.ml.cloud.ibm.com'
var wml_service_credentials_username = '8b9b89e0-aaa5-4fcd-8a5d-b0d8c85c5152'
var wml_service_credentials_password = '26de7ff9-7bb6-45ce-b311-d0b14061748f'
var wml_api_key = 'SPUIW7odR8YWYSJ5ij_3PgzD77Z59K4A9GIJcnfwU_xb'

const wml_credentials = new Map();
wml_credentials.set("url", wml_service_credentials_url);
wml_credentials.set("username", wml_service_credentials_username);
wml_credentials.set("password", wml_service_credentials_password);


function apiGet(url, username, password, loadCallback, errorCallback){
	const oReq = new XMLHttpRequest();
	const tokenHeader = "Basic " + btoa((username + ":" + password));
	const tokenUrl = url + "/v3/identity/token";

	oReq.addEventListener("load", loadCallback);
	oReq.addEventListener("error", errorCallback);
	oReq.open("GET", tokenUrl);
	oReq.setRequestHeader("Authorization", tokenHeader);
	oReq.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	oReq.send();
}


function apiPost(scoring_url, token, payload, loadCallback, errorCallback){
	const oReq = new XMLHttpRequest();
	oReq.addEventListener("load", loadCallback);
	oReq.addEventListener("error", errorCallback);
	oReq.open("POST", scoring_url);
	oReq.setRequestHeader("Accept", "application/json");
	oReq.setRequestHeader("Authorization", token);
	oReq.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
	oReq.send(payload);
}


apiGet(wml_credentials.get("url"),
	wml_credentials.get("username"),
	wml_credentials.get("password"),
	function (res) {
        let parsedGetResponse;
        try {
            parsedGetResponse = JSON.parse(this.responseText);
        } catch(ex) {
            // TODO: handle parsing exception
        }
        if (parsedGetResponse && parsedGetResponse.token) {
            const token = parsedGetResponse.token
            const wmlToken = "Bearer " + token;
			var payload_array = {
				fields:  ["AVGHEARTBEATSPERMIN","PALPITATIONSPERDAY","CHOLESTEROL","BMI","AGE","SEX","FAMILYHISTORY","SMOKERLAST5YRS","EXERCISEMINPERWEEK"],
				values: [[ 93, 22, 163, 25, 49, 'F', 'N', 'N', 110 ]]
			};
			var payload = JSON.stringify(payload_array);
			console.log(payload);
			const scoring_url = wml_credentials.get("url") + "/v3/wml_instances/" + wml_instance + "/deployments/" + wml_deployment + "/online";

            apiPost(scoring_url, wmlToken, payload, function (resp) {
                let parsedPostResponse;
                try {
                    parsedPostResponse = JSON.parse(this.responseText);
                } catch (ex) {
                    // TODO: handle parsing exception
                }
                console.log("Scoring response");
				console.log(parsedPostResponse);
				var confidence = parsedPostResponse['values'][0][11];
				var prediction = parsedPostResponse['values'][0][13];
				console.log('Employee Attrition: ' + prediction)
				console.log('Model Confidence: ' + confidence)

            }, function (error) {
                console.log(error);
            });
        } else {
            console.log("Failed to retrieve Bearer token");
        }
	}, function (err) {
		console.log(err);
	});
